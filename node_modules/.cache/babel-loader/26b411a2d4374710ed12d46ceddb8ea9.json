{"ast":null,"code":"import { checkParams, methodEndsWith } from \"./misc\";\nexport function isSubscribeRequest(request) {\n  return isSubscribeMethod(request.method) && isSubscribeParams(request.params);\n}\nexport function isSubscribeMethod(method) {\n  return methodEndsWith(method, \"subscribe\");\n}\nexport function isSubscribeParams(params) {\n  const required = [\"topic\"];\n  const optional = [];\n  return checkParams(params, required, optional);\n}\nexport function isPublishRequest(request) {\n  return isPublishMethod(request.method) && isPublishParams(request.params);\n}\nexport function isPublishMethod(method) {\n  return methodEndsWith(method, \"publish\");\n}\nexport function isPublishParams(params) {\n  const required = [\"message\", \"topic\", \"ttl\"];\n  const optional = [\"prompt\"];\n  return checkParams(params, required, optional);\n}\nexport function isUnsubscribeRequest(request) {\n  return isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params);\n}\nexport function isUnsubscribeMethod(method) {\n  return methodEndsWith(method, \"unsubscribe\");\n}\nexport function isUnsubscribeParams(params) {\n  const required = [\"id\", \"topic\"];\n  const optional = [];\n  return checkParams(params, required, optional);\n}\nexport function isSubscriptionRequest(request) {\n  return isSubscriptionMethod(request.method) && isSubscriptionParams(request.params);\n}\nexport function isSubscriptionMethod(method) {\n  return methodEndsWith(method, \"subscription\");\n}\nexport function isSubscriptionParams(params) {\n  const required = [\"id\", \"data\"];\n  const optional = [];\n  return checkParams(params, required, optional);\n}","map":{"version":3,"sources":["../../src/validators.ts"],"names":[],"mappings":"AAEA,SAAS,WAAT,EAAsB,cAAtB,QAA4C,QAA5C;AAKA,OAAM,SAAU,kBAAV,CACJ,OADI,EACmB;AAEvB,SAAO,iBAAiB,CAAC,OAAO,CAAC,MAAT,CAAjB,IAAqC,iBAAiB,CAAC,OAAO,CAAC,MAAT,CAA7D;AACD;AAED,OAAM,SAAU,iBAAV,CAA4B,MAA5B,EAA0C;AAC9C,SAAO,cAAc,CAAC,MAAD,EAAS,WAAT,CAArB;AACD;AAED,OAAM,SAAU,iBAAV,CACJ,MADI,EACO;AAEX,QAAM,QAAQ,GAAG,CAAC,OAAD,CAAjB;AACA,QAAM,QAAQ,GAAG,EAAjB;AACA,SAAO,WAAW,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAlB;AACD;AAID,OAAM,SAAU,gBAAV,CACJ,OADI,EACmB;AAEvB,SAAO,eAAe,CAAC,OAAO,CAAC,MAAT,CAAf,IAAmC,eAAe,CAAC,OAAO,CAAC,MAAT,CAAzD;AACD;AAED,OAAM,SAAU,eAAV,CAA0B,MAA1B,EAAwC;AAC5C,SAAO,cAAc,CAAC,MAAD,EAAS,SAAT,CAArB;AACD;AAED,OAAM,SAAU,eAAV,CACJ,MADI,EACO;AAEX,QAAM,QAAQ,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,KAArB,CAAjB;AACA,QAAM,QAAQ,GAAG,CAAC,QAAD,CAAjB;AACA,SAAO,WAAW,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAlB;AACD;AAID,OAAM,SAAU,oBAAV,CACJ,OADI,EACmB;AAEvB,SACE,mBAAmB,CAAC,OAAO,CAAC,MAAT,CAAnB,IAAuC,mBAAmB,CAAC,OAAO,CAAC,MAAT,CAD5D;AAGD;AAED,OAAM,SAAU,mBAAV,CAA8B,MAA9B,EAA4C;AAChD,SAAO,cAAc,CAAC,MAAD,EAAS,aAAT,CAArB;AACD;AAED,OAAM,SAAU,mBAAV,CACJ,MADI,EACO;AAEX,QAAM,QAAQ,GAAG,CAAC,IAAD,EAAO,OAAP,CAAjB;AACA,QAAM,QAAQ,GAAG,EAAjB;AACA,SAAO,WAAW,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAlB;AACD;AAID,OAAM,SAAU,qBAAV,CACJ,OADI,EACmB;AAEvB,SACE,oBAAoB,CAAC,OAAO,CAAC,MAAT,CAApB,IAAwC,oBAAoB,CAAC,OAAO,CAAC,MAAT,CAD9D;AAGD;AAED,OAAM,SAAU,oBAAV,CAA+B,MAA/B,EAA6C;AACjD,SAAO,cAAc,CAAC,MAAD,EAAS,cAAT,CAArB;AACD;AAED,OAAM,SAAU,oBAAV,CACJ,MADI,EACO;AAEX,QAAM,QAAQ,GAAG,CAAC,IAAD,EAAO,MAAP,CAAjB;AACA,QAAM,QAAQ,GAAG,EAAjB;AACA,SAAO,WAAW,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAlB;AACD","sourceRoot":"","sourcesContent":["import { checkParams, methodEndsWith } from \"./misc\";\nexport function isSubscribeRequest(request) {\n    return isSubscribeMethod(request.method) && isSubscribeParams(request.params);\n}\nexport function isSubscribeMethod(method) {\n    return methodEndsWith(method, \"subscribe\");\n}\nexport function isSubscribeParams(params) {\n    const required = [\"topic\"];\n    const optional = [];\n    return checkParams(params, required, optional);\n}\nexport function isPublishRequest(request) {\n    return isPublishMethod(request.method) && isPublishParams(request.params);\n}\nexport function isPublishMethod(method) {\n    return methodEndsWith(method, \"publish\");\n}\nexport function isPublishParams(params) {\n    const required = [\"message\", \"topic\", \"ttl\"];\n    const optional = [\"prompt\"];\n    return checkParams(params, required, optional);\n}\nexport function isUnsubscribeRequest(request) {\n    return (isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params));\n}\nexport function isUnsubscribeMethod(method) {\n    return methodEndsWith(method, \"unsubscribe\");\n}\nexport function isUnsubscribeParams(params) {\n    const required = [\"id\", \"topic\"];\n    const optional = [];\n    return checkParams(params, required, optional);\n}\nexport function isSubscriptionRequest(request) {\n    return (isSubscriptionMethod(request.method) && isSubscriptionParams(request.params));\n}\nexport function isSubscriptionMethod(method) {\n    return methodEndsWith(method, \"subscription\");\n}\nexport function isSubscriptionParams(params) {\n    const required = [\"id\", \"data\"];\n    const optional = [];\n    return checkParams(params, required, optional);\n}\n//# sourceMappingURL=validators.js.map"]},"metadata":{},"sourceType":"module"}