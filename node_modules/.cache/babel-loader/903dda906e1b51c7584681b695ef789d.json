{"ast":null,"code":"import pino from \"pino\";\nimport { EventEmitter } from \"events\";\nimport { IHeartBeat } from \"@walletconnect/types\";\nimport { HEARTBEAT_INTERVAL, HEARTBEAT_EVENTS, HEARTBEAT_CONTEXT, HEARTBEAT_DEFAULT_LOGGER } from \"../constants\";\nimport { generateChildLogger, getDefaultLoggerOptions, getLoggerContext } from \"@walletconnect/logger\";\nimport { toMiliseconds } from \"@walletconnect/utils\";\nexport class HeartBeat extends IHeartBeat {\n  constructor(opts) {\n    super(opts);\n    this.events = new EventEmitter();\n    this.interval = HEARTBEAT_INTERVAL;\n    this.name = HEARTBEAT_CONTEXT;\n    this.logger = typeof (opts === null || opts === void 0 ? void 0 : opts.logger) !== \"undefined\" && typeof (opts === null || opts === void 0 ? void 0 : opts.logger) !== \"string\" ? generateChildLogger(opts.logger, this.name) : pino(getDefaultLoggerOptions({\n      level: (opts === null || opts === void 0 ? void 0 : opts.logger) || HEARTBEAT_DEFAULT_LOGGER\n    }));\n    this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || HEARTBEAT_INTERVAL;\n  }\n\n  static async init(opts) {\n    const heartbeat = new HeartBeat(opts);\n    await heartbeat.init();\n    return heartbeat;\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  async init() {\n    this.logger.trace(`Initialized`);\n    await this.initialize();\n  }\n\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n\n  async initialize() {\n    setInterval(() => this.pulse(), toMiliseconds(this.interval));\n    this.logger.trace(`Initialized`);\n  }\n\n  pulse() {\n    this.events.emit(HEARTBEAT_EVENTS.pulse);\n  }\n\n}","map":{"version":3,"sources":["../../../src/controllers/heartbeat.ts"],"names":[],"mappings":"AAAA,OAAO,IAAP,MAA6B,MAA7B;AACA,SAAS,YAAT,QAA6B,QAA7B;AAEA,SAAS,UAAT,QAA6C,sBAA7C;AAEA,SACE,kBADF,EAEE,gBAFF,EAGE,iBAHF,EAIE,wBAJF,QAKO,cALP;AAMA,SACE,mBADF,EAEE,uBAFF,EAGE,gBAHF,QAIO,uBAJP;AAKA,SAAS,aAAT,QAA8B,sBAA9B;AAEA,OAAM,MAAO,SAAP,SAAyB,UAAzB,CAAmC;AAevC,EAAA,WAAA,CAAY,IAAZ,EAAmC;AACjC,UAAM,IAAN;AATK,SAAA,MAAA,GAAS,IAAI,YAAJ,EAAT;AAEA,SAAA,QAAA,GAAW,kBAAX;AAEA,SAAA,IAAA,GAAe,iBAAf;AAML,SAAK,MAAL,GACE,QAAO,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,MAAb,MAAwB,WAAxB,IAAuC,QAAO,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,MAAb,MAAwB,QAA/D,GACI,mBAAmB,CAAC,IAAI,CAAC,MAAN,EAAc,KAAK,IAAnB,CADvB,GAEI,IAAI,CAAC,uBAAuB,CAAC;AAAE,MAAA,KAAK,EAAE,CAAA,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,MAAN,KAAgB;AAAzB,KAAD,CAAxB,CAHV;AAIA,SAAK,QAAL,GAAgB,CAAA,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,QAAN,KAAkB,kBAAlC;AACD;;AArBgB,eAAJ,IAAI,CAAC,IAAD,EAAwB;AACvC,UAAM,SAAS,GAAG,IAAI,SAAJ,CAAc,IAAd,CAAlB;AACA,UAAM,SAAS,CAAC,IAAV,EAAN;AACA,WAAO,SAAP;AACD;;AAmBU,MAAP,OAAO,GAAA;AACT,WAAO,gBAAgB,CAAC,KAAK,MAAN,CAAvB;AACD;;AAEgB,QAAJ,IAAI,GAAA;AACf,SAAK,MAAL,CAAY,KAAZ,CAAkB,aAAlB;AACA,UAAM,KAAK,UAAL,EAAN;AACD;;AAEM,EAAA,EAAE,CAAC,KAAD,EAAgB,QAAhB,EAA6B;AACpC,SAAK,MAAL,CAAY,EAAZ,CAAe,KAAf,EAAsB,QAAtB;AACD;;AAEM,EAAA,IAAI,CAAC,KAAD,EAAgB,QAAhB,EAA6B;AACtC,SAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB,EAAwB,QAAxB;AACD;;AAEM,EAAA,GAAG,CAAC,KAAD,EAAgB,QAAhB,EAA6B;AACrC,SAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,EAAuB,QAAvB;AACD;;AAEM,EAAA,cAAc,CAAC,KAAD,EAAgB,QAAhB,EAA6B;AAChD,SAAK,MAAL,CAAY,cAAZ,CAA2B,KAA3B,EAAkC,QAAlC;AACD;;AAIuB,QAAV,UAAU,GAAA;AACtB,IAAA,WAAW,CAAC,MAAM,KAAK,KAAL,EAAP,EAAqB,aAAa,CAAC,KAAK,QAAN,CAAlC,CAAX;AACA,SAAK,MAAL,CAAY,KAAZ,CAAkB,aAAlB;AACD;;AAEO,EAAA,KAAK,GAAA;AACX,SAAK,MAAL,CAAY,IAAZ,CAAiB,gBAAgB,CAAC,KAAlC;AACD;;AA1DsC","sourceRoot":"","sourcesContent":["import pino from \"pino\";\nimport { EventEmitter } from \"events\";\nimport { IHeartBeat } from \"@walletconnect/types\";\nimport { HEARTBEAT_INTERVAL, HEARTBEAT_EVENTS, HEARTBEAT_CONTEXT, HEARTBEAT_DEFAULT_LOGGER, } from \"../constants\";\nimport { generateChildLogger, getDefaultLoggerOptions, getLoggerContext, } from \"@walletconnect/logger\";\nimport { toMiliseconds } from \"@walletconnect/utils\";\nexport class HeartBeat extends IHeartBeat {\n    constructor(opts) {\n        super(opts);\n        this.events = new EventEmitter();\n        this.interval = HEARTBEAT_INTERVAL;\n        this.name = HEARTBEAT_CONTEXT;\n        this.logger =\n            typeof (opts === null || opts === void 0 ? void 0 : opts.logger) !== \"undefined\" && typeof (opts === null || opts === void 0 ? void 0 : opts.logger) !== \"string\"\n                ? generateChildLogger(opts.logger, this.name)\n                : pino(getDefaultLoggerOptions({ level: (opts === null || opts === void 0 ? void 0 : opts.logger) || HEARTBEAT_DEFAULT_LOGGER }));\n        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || HEARTBEAT_INTERVAL;\n    }\n    static async init(opts) {\n        const heartbeat = new HeartBeat(opts);\n        await heartbeat.init();\n        return heartbeat;\n    }\n    get context() {\n        return getLoggerContext(this.logger);\n    }\n    async init() {\n        this.logger.trace(`Initialized`);\n        await this.initialize();\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async initialize() {\n        setInterval(() => this.pulse(), toMiliseconds(this.interval));\n        this.logger.trace(`Initialized`);\n    }\n    pulse() {\n        this.events.emit(HEARTBEAT_EVENTS.pulse);\n    }\n}\n//# sourceMappingURL=heartbeat.js.map"]},"metadata":{},"sourceType":"module"}