{"ast":null,"code":"var _jsxFileName = \"/Users/dgreat/Gtas/celo201project/src/components/minter/nfts/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Col, Badge, Stack, Row } from \"react-bootstrap\";\nimport { truncateAddress } from \"../../../utils\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Identicon from \"../../ui/Identicon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NftCard = _ref => {\n  _s();\n\n  let {\n    nft,\n    send,\n    contractOwner\n  } = _ref;\n  const {\n    image,\n    description,\n    owner,\n    name,\n    index,\n    price,\n    sold\n  } = nft;\n\n  const handleSend = (index, owner) => {\n    if (!sendAddrss) return;\n    send(sendAddrss, index, owner);\n  };\n\n  const [sendAddrss, setSendAddrss] = useState(\"\");\n  {\n    console.log(sold);\n  }\n  return /*#__PURE__*/_jsxDEV(Col, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \" h-100\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"horizontal\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Identicon, {\n            address: owner,\n            size: 28\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-monospace text-secondary\",\n            children: truncateAddress(owner)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"secondary\",\n            className: \"ms-auto\",\n            children: [price / 10 ** 18, \" CELO\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" ratio ratio-4x3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: description,\n          style: {\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"d-flex  flex-column text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"flex-grow-1\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2\",\n            children: attributes.map((attribute, key) => /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-secondary fw-lighter small text-capitalize\",\n                  children: attribute.trait_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-secondary text-capitalize font-monospace\",\n                  children: attribute.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), contractOwner === owner && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"pt-2\",\n            type: \"text\",\n            placeholder: \"Send Address\",\n            onChange: e => {\n              setSendAddrss(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleSend(index, owner),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), !sold ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: buyNft,\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this) : contractOwner === owner ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: sellNft,\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          disabled: true,\n          children: \"Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NftCard, \"KgWNvpnWmmRssESUC2NGAZOGfiI=\");\n\n_c = NftCard;\nNftCard.propTypes = {\n  // props passed into this component\n  nft: PropTypes.instanceOf(Object).isRequired\n};\nexport default NftCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftCard\");","map":{"version":3,"sources":["/Users/dgreat/Gtas/celo201project/src/components/minter/nfts/Card.js"],"names":["React","useState","PropTypes","Card","Col","Badge","Stack","Row","truncateAddress","Form","Button","Identicon","NftCard","nft","send","contractOwner","image","description","owner","name","index","price","sold","handleSend","sendAddrss","setSendAddrss","console","log","objectFit","attributes","map","attribute","key","trait_type","value","e","target","buyNft","sellNft","propTypes","instanceOf","Object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Col, Badge, Stack, Row } from \"react-bootstrap\";\nimport { truncateAddress } from \"../../../utils\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Identicon from \"../../ui/Identicon\";\n\nconst NftCard = ({ nft, send, contractOwner }) => {\n  const { image, description, owner, name, index, price,sold } = nft;\n\n  const handleSend = (index, owner) => {\n    if (!sendAddrss) return;\n    send(sendAddrss, index, owner);\n  };\n  const [sendAddrss, setSendAddrss] = useState(\"\");\n  {\n    console.log(sold);\n  }\n  return (\n    <Col key={index}>\n      <Card className=\" h-100\">\n        <Card.Header>\n          <Stack direction=\"horizontal\" gap={2}>\n            <Identicon address={owner} size={28} />\n            <span className=\"font-monospace text-secondary\">\n              {truncateAddress(owner)}\n            </span>\n            <Badge bg=\"secondary\" className=\"ms-auto\">\n              {price / 10 ** 18} CELO\n            </Badge>\n          </Stack>\n        </Card.Header>\n\n        <div className=\" ratio ratio-4x3\">\n          <img src={image} alt={description} style={{ objectFit: \"cover\" }} />\n        </div>\n\n        <Card.Body className=\"d-flex  flex-column text-center\">\n          <Card.Title>{name}</Card.Title>\n          <Card.Text className=\"flex-grow-1\">{description}</Card.Text>\n          <div>\n            <Row className=\"mt-2\">\n              {attributes.map((attribute, key) => (\n                <Col key={key}>\n                  <div className=\"border rounded bg-light\">\n                    <div className=\"text-secondary fw-lighter small text-capitalize\">\n                      {attribute.trait_type}\n                    </div>\n                    <div className=\"text-secondary text-capitalize font-monospace\">\n                      {attribute.value}\n                    </div>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </div>\n          {contractOwner === owner && (\n            <>\n              <Form.Control\n                className={\"pt-2\"}\n                type=\"text\"\n                placeholder=\"Send Address\"\n                onChange={(e) => {\n                  setSendAddrss(e.target.value);\n                }}\n              />\n              <Button\n                variant=\"secondary\"\n                onClick={() => handleSend(index, owner)}\n              >\n                Send\n              </Button>\n            </>\n                      )}\n\n            {!sold ? (\n              <Button variant=\"secondary\" onClick={buyNft}>\n                Buy\n              </Button>\n            ) : contractOwner === owner ? (\n              <Button variant=\"danger\" onClick={sellNft}>\n                Sell\n              </Button>\n            ) : (\n              <Button variant=\"danger\" disabled>\n              Sold\n              </Button>\n          )}\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nNftCard.propTypes = {\n  // props passed into this component\n  nft: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default NftCard;"]},"metadata":{},"sourceType":"module"}